# Default values for Traefik
image:
  name: traefik
  pullPolicy: Always

fullnameOverride: traefik

# Configure the deployment
deployment:
  enabled: true
  kind: Deployment
  replicas: 1
  terminationGracePeriodSeconds: 60
  minReadySeconds: 0
  shareProcessNamespace: false
  imagePullSecrets: []

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  maxUnavailable: 33%

# Use ingressClass. Ignored if Traefik version < 2.3 / kubernetes < 1.18.x
ingressClass:
  enabled: false

# Activate Pilot integration
pilot:
  enabled: false

# Enable experimental features
experimental:
  http3:
    enabled: true
  plugins:
    enabled: true
  kubernetesGateway:
    enabled: false

# Create an IngressRoute for the dashboard
ingressRoute:
  dashboard:
    enabled: true

rollingUpdate:
  maxUnavailable: 1
  maxSurge: 3

# Configure providers
providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: false
    allowExternalNameServices: false

  kubernetesIngress:
    enabled: false

# Logs
logs:
  general:
    level: ERROR
  access:
    enabled: true
    fields:
      general:
        defaultmode: keep
        names: {}
      headers:
        defaultmode: drop
        names: {}

metrics:
  prometheus:
    entryPoint: metrics

globalArguments:
  - "--global.checknewversion"
  - "--global.sendanonymoususage"

additionalArguments:
  - "--certificatesresolvers.lehttp.acme.httpchallenge=true"
  - "--certificatesresolvers.lehttp.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.lehttp.acme.storage=/data/acme.json"
  - "--certificatesresolvers.letls.acme.tlschallenge=true"
  - "--certificatesresolvers.letls.acme.storage=/data/acme.json"

# Configure ports
ports:
  traefik:
    port: 9000
    expose: false
    exposedPort: 9000
    protocol: TCP
  web:
    port: 8000
    expose: true
    exposedPort: 80
    protocol: TCP
  websecure:
    port: 8443
    expose: true
    exposedPort: 443
    protocol: TCP
    tls:
      enabled: false
      certResolver: "letls"
  metrics:
    port: 9100
    expose: false
    exposedPort: 9100
    protocol: TCP

# TLS Options are created as TLSOption CRDs
# https://doc.traefik.io/traefik/https/tls/#tls-options
# Example:
# tlsOptions:
#   default:
#     sniStrict: true
#     minVersion: VersionTLS12
#     curvePreferences:
#       - CurveP521
#       - CurveP384

# Options for the main traefik service, where the entrypoints traffic comes
# from.
service:
  enabled: true
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "traefik-ingress"
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
    service.beta.kubernetes.io/do-loadbalancer-size-unit: "1"

## Create HorizontalPodAutoscaler object.
##
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 80

persistence:
  enabled: false
  name: data
  accessMode: ReadWriteOnce
  size: 128Mi
  path: /data
  annotations: {}

rbac:
  enabled: true

podSecurityPolicy:
  enabled: false

resources:
  requests:
    cpu: "100m"
    memory: "50Mi"
  limits:
    cpu: "300m"
    memory: "150Mi"

podAntiAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
              - traefik
      topologyKey: kubernetes.io/hostname

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532

podSecurityContext:
  fsGroup: 65532